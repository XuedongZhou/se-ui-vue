@use 'sass:math';
@use 'sass:list';
@use './tiny-color' as *;

$hue-step: 2;
$saturation-step-shallow: 16; // 饱和度阶梯，浅色部分
$saturation-step-deep: 5; // 饱和度阶梯，深色部分
$brightness-step-shallow: 5; // 亮度阶梯，浅色部分
$brightness-step-deep: 15; // 亮度阶梯，深色部分
$color-count-shallow: 5; // 浅色数量，主色上
$color-count-deep: 4; // 深色数量，主色下

@function tint-white($color, $percent) {
  @return mix(#fff, $color, $percent);
}

@function tint-black($color, $percent) {
  @return mix(#000, $color, $percent);
}

@function get-hue($h, $s, $v, $i, $light) {
  $hue: null;
  @if $h >= 60 and $h <= 240 {
    @if $light == true {
      $hue: $h - $hue-step * $i;
    } @else {
      $hue: $h + $hue-step * $i;
    }
  } @else {
    @if $light == true {
      $hue: $h + $hue-step * $i;
    } @else {
      $hue: $h - $hue-step * $i;
    }
  }

  @if $hue < 0 {
    $hue: $hue + 360;
  } @else if $hue >= 360 {
    $hue: $hue - 360;
  }

  @return $hue;
}

@function get-saturation($h, $s, $v, $i, $light) {
  $saturation: 0;

  // 灰色不改变饱和度
  @if $h == 0 and $s == 0 {
    @return $s;
  }

  @if $light == true {
    $saturation: $s - $saturation-step-shallow * $i;
  } @else if $i == $color-count-deep {
    $saturation: $s + $saturation-step-shallow;
  } @else {
    $saturation: $s + $saturation-step-deep * $i;
  }

  // 边界值修正
  @if $saturation > 100 {
    $saturation: 100;
  }

  // 第一格的 s 限制在 6-10 之间
  @if $light == true and $i == $color-count-shallow and $saturation > 10 {
    $saturation: 10;
  }
  @if $saturation < 6 {
    $saturation: 6;
  }

  @return round($saturation);
}

@function get-value($h, $s, $v, $i, $light) {
  @if $light == true {
    @return ($v + $brightness-step-shallow * $i);
  }

  @return ($v - $brightness-step-deep * $i);
}

@function color-palette($color, $level, $light) {
  $hsv: ch-color-to-hsv($color);

  $v: list.nth($hsv, 3);
  $s: list.nth($hsv, 2);
  $h: list.nth($hsv, 1);

  $adjust-hue: math.round(get-hue($h, $s, $v, $level, $light));
  $adjust-saturation: get-saturation($h, $s, $v, $level, $light);
  $adjust-light: get-value($h, $s, $v, $level, $light);

  @return ch-hsv-to-color($adjust-hue, $adjust-saturation, $adjust-light);
}
